
crowdfunder sql
  create.sql
    creates a projects table with an id as a primary key
    creates a projects table with a title field
    creates a projects table with a category field
    creates a projects table with a funding_goal field
    creates a projects table with a start_date field
    creates a projects table with a end_date field
    creates a users table with an id as a primary key
    creates a users table with a name field
    creates a users table with an age field
    creates a pledges table with an id as a primary key
    creates a pledges table with an amount field
    creates a pledges table with a user_id field
    creates a pledges table with a project_id field
  insert.sql
    has 20 users
    has 10 projects
    has 30 pledges
  questions
    #selects_the_titles_of_all_projects_and_their_pledge_amounts_alphabetized_by_name
    #selects_the_user_name_age_and_pledge_amount_for_all_pledges_alphabetized_by_name
    #selects_the_titles_and_amount_over_goal_of_all_projects_that_have_met_their_funding_goal
    #selects_user_names_and_amounts_of_all_pledges_grouped_by_name_then_orders_them_by_the_amount_and_users_name
    #selects_the_category_names_and_pledge_amounts_of_all_pledges_in_the_music_category (FAILED - 1)

Failures:

  1) crowdfunder sql questions #selects_the_category_names_and_pledge_amounts_of_all_pledges_in_the_music_category
     Failure/Error: expect(@db.execute(selects_the_category_names_and_pledge_amounts_of_all_pledges_in_the_music_category)).to eq([["music", 40], ["music", 24], ["music", 34], ["music", 12], ["music", 40], ["music", 40], ["music", 20], ["music", 230]])
       
       expected: [["music", 40], ["music", 24], ["music", 34], ["music", 12], ["music", 40], ["music", 40], ["music", 20], ["music", 230]]
            got: [["music", 10], ["music", 10], ["music", 20], ["music", 20], ["music", 40], ["music", 40], ["music", 50], ["music", 50], ["music", 10], ["music", 10], ["music", 20], ["music", 20], ["music", 40], ["music", 40], ["music", 60], ["music", 60], ["music", 50], ["music", 50], ["music", 700], ["music", 700], ["music", 1000], ["music", 1000], ["music", 40], ["music", 40], ["music", 50], ["music", 50], ["music", 50], ["music", 50], ["music", 24], ["music", 24], ["music", 34], ["music", 34], ["music", 12], ["music", 12], ["music", 19], ["music", 19], ["music", 20], ["music", 20], ["music", 40], ["music", 40], ["music", 35.5], ["music", 35.5], ["music", 40], ["music", 40], ["music", 60], ["music", 60], ["music", 70], ["music", 70], ["music", 100], ["music", 100], ["music", 40], ["music", 40], ["music", 20], ["music", 20], ["music", 90], ["music", 90], ["music", 230], ["music", 230], ["music", 450], ["music", 450]]
       
       (compared using ==)
     # ./spec/crowdfunder_spec.rb:114:in `block (3 levels) in <top (required)>'

Finished in 0.02176 seconds (files took 0.19084 seconds to load)
21 examples, 1 failure

Failed examples:

rspec ./spec/crowdfunder_spec.rb:113 # crowdfunder sql questions #selects_the_category_names_and_pledge_amounts_of_all_pledges_in_the_music_category

